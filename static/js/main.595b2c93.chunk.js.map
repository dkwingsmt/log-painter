{"version":3,"sources":["common/App-classes.ts","common/AlertDialog.tsx","common/MultiStep.tsx","step-render/StepRender.tsx","common/derive-renpy-names.ts","common/renderers.tsx","step-source/parser_chat.ts","step-source/group.ts","step-source/StepSource.tsx","step-config/postprocesses.ts","step-config/PaletteSwitch.tsx","step-config/StepConfig.tsx","web/App.tsx","serviceWorker.ts","index.tsx","common/configs.ts","common/colors.ts"],"names":["useStepperStyles","makeStyles","createStyles","Control","display","marginTop","Body","Container","paddingTop","ControlButton","width","marginLeft","AlertDialog","open","onClose","body","Dialog","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Button","onClick","color","autoFocus","MultiStep","props","Step1","step1","Step2","step2","Step3","step3","initConfig","saveConfig","useState","session","setSession","initStates","setInitStates","o1","o2","configStack","setConfigStack","pushConfig","value","popConfig","slice","length","Grid","item","xs","show","onNextStep","result","config","args","onPrevStep","onRestart","useStyles","Output","fontFamily","fontSize","padding","borderColor","borderStyle","borderWidth","borderRadius","maxHeight","overflowY","margin","StepRender","useContext","configContext","stepperClasses","classes","playersConfig","useRef","players","current","snackbarControl","setSnackbarControl","alertOnSnackbar","scheme","renderingSchemes","general","rendererScheme","lines","filter","line","playerId","enabled","map","content","playerName","displayName","playerColor","ClipboardJS","target","element","document","getElementById","Error","on","setImmediate","e","console","error","clipboard","useEffect","destroy","container","className","onDoubleClick","selection","window","getSelection","range","createRange","selectNode","removeAllRanges","addRange","style","float","renderContent","justifyContent","variant","backgroundColor","anchorOrigin","vertical","horizontal","autoHideDuration","message","within","code","lowestIncluded","highestIncluded","isValidStart","keywords","keywordsMap","sanitizeIdentifier","name","metFirst","split","c","codePointAt","join","deriveRenpyNames","names","sourceDedupId","sourceDedupTable","sourceDeduped","push","finished","dedupId","nextDedupName","remaining","entireDedup","isEmpty","sanitized","existingKey","longest","max","Object","values","chars","nextRemaining","curLen","working","forEach","key","attempt","s","keyword","isKeyword","size","standardLineRenderer","leftDiv","rightDiv","contentLine","contentId","concat","bbsFinalLineRenderer","htmlFinalLineRenderer","escapeHtml","escapeString","replaceAll","interlaceNewline","newlines","start","index","i","renpyRenderer","profiles","uniqBy","renpyNames","profile","nameMap","renpyName","header","contents","nameLengthSpaces","repeat","description","allowNewPalette","previewRenderer","finalRenderer","renderedLines","dangerouslySetInnerHTML","__html","preview","removeSystemTextConverter","logLine","withdrawParser","withdrawEnglishParser","withdrawMemberParser","withdrawMember2Parser","commonFriendsParser","joinMemberParser","inviteMemberParser","end","some","toMatch","exec","regNumber","regTitle","regTime","removeMobileDateConverter","dateParser","removeMessageManagerSystemTextConverter","RegExp","source","defaultConverter","trim","splice","trimNumber","src","exportFromLog","headerParser","regDateName","matches","time","number","player","undefined","logLineConverter","includes","copyFromChat","regDateTime","title","flow","copyFromMessageManager","copyFromMobile","shikiLogRecord","sinaNyaLogRecord","reparseAngularBracket","reparseBoldBracket","getPlayerId","defaultGroupedPlayer","Set","add","parseAndGroup","logLines","parsedLine","groupByPlayers","data","firstLogConfig","parsedHeader","logConfig","currentLogLine","compact","parseChat","StepSource","text","setText","alertControl","setAlertControl","TextField","label","placeholder","multiline","fullWidth","rows","onChange","event","disabled","groupResult","processResult","regularizeQuotes","inQuoteChars","outQuoteChars","now","ch","outerButton","paper","flexDirection","background","menu","flex","descriptionBox","overflowX","descriptionText","descriptionDisplay","height","descriptionDisplayCell","PaletteSwitch","setValue","React","dialogOpen","setDialogOpen","colorPalettes","dialogSelect","setDialogSelect","handleCloseDialog","Paper","MenuList","palette","MenuItem","selected","PlayerConfig","Center","alignItems","PlayerConfigDashboard","setEnabled","setName","setColor","defaultValue","onBlur","FormGroup","row","FormControl","Switch","checked","visibility","Select","Color","isLight","textAlign","native","paletteColor","StepConfigPlayers","setPlayer","useConfigStyles","marginBottom","RendererSelect","RendererDescription","RendererPreview","border","StepConfigGeneral","setPalette","FormControlLabel","control","removeLinesStartedWithParenthesis","removeLinesStartedWithDot","removeLinesStartedWithLenticular","getFirstLines","visited","StepConfigRenderer","schemeId","setScheme","memoizedGetFirstLines","memoize","options","paletteId","firstLines","change","newValue","initializePlayers","analysePlayers","playerConfigs","colors","availableColors","existingConfig","sourceNames","reverse","Array","from","playerResult","nameCandidates","uniq","keys","fromPairs","postProcess","generalConfig","resultLines","StepConfig","setGeneralConfig","setPlayers","newSchemeId","defaultGeneralConfig","mapValues","useHeaderStyles","logo","marginRight","horizontalFill","toolbarIcon","fill","Header","repoUrl","AppBar","position","Toolbar","Avatar","alt","Typography","IconButton","href","rel","svg","GithubIcon","Main","configStorage","sanitizeConfig","load","setConfig","ConfigProvider","Provider","save","theme","createTheme","primary","main","secondary","App","ThemeProvider","maxWidth","realConfigStorage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","nonNullValue","emptyConfig","Store","set","createContext","initializeColors","rawData","others","rawBbsColors","rawV2Colors","once"],"mappings":"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","file":"static/js/main.595b2c93.chunk.js","sourcesContent":["import { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStepperStyles = makeStyles((/*theme: Theme*/) =>\r\n  createStyles({\r\n    Control: {\r\n      display: 'flex',\r\n      marginTop: 20,\r\n    },\r\n    Body: {\r\n    },\r\n    Container: {\r\n      paddingTop: 10,\r\n    },\r\n    ControlButton: {\r\n      width: 100,\r\n      marginLeft: 10,\r\n    }\r\n  }),\r\n);\r\n","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport interface AlertDialogControl {\r\n  open: boolean;\r\n  body?: React.ReactNode;\r\n}\r\n\r\ninterface AlertDialogProps extends AlertDialogControl {\r\n  onClose: () => void;\r\n}\r\n\r\nconst AlertDialog: React.FC<AlertDialogProps> = ({ open, onClose, body }: AlertDialogProps) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>出错啦</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {body}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClose} color=\"primary\" autoFocus>\r\n            好的\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { AlertDialog };","import React, { useState } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\ninterface BaseStep {\r\n  show: boolean;\r\n}\r\n\r\ninterface WithOutArg<OutArg, Config> {\r\n  onNextStep: (result: OutArg, config: Config) => void;\r\n}\r\n\r\ninterface WithPrevStep<InArg> {\r\n  args: InArg;\r\n  onPrevStep: () => void;\r\n}\r\n\r\ninterface WithRestart<Config> {\r\n  onRestart: (config: Config) => void;\r\n}\r\n\r\nexport type StartStepProps<O, Config> = BaseStep & WithOutArg<O, Config>;\r\nexport type MiddleStepProps<I, O, Config> = BaseStep & WithOutArg<O, Config> & WithPrevStep<I>;\r\nexport type EndStepProps<I, Config> = BaseStep & WithPrevStep<I> & WithRestart<Config>;\r\n\r\ninterface MultiStepProps<O1, O2, Config> {\r\n  step1: React.ComponentType<StartStepProps<O1, Config>>;\r\n  step2: React.ComponentType<MiddleStepProps<O1, O2, Config>>;\r\n  step3: React.ComponentType<EndStepProps<O2, Config>>;\r\n  initConfig: () => Config;\r\n  saveConfig: (value: Config) => void;\r\n}\r\n\r\nconst MultiStep = <O1, O2, Config>(\r\n  props: MultiStepProps<O1, O2, Config>,\r\n): React.ReactElement | null => {\r\n  const { step1: Step1, step2: Step2, step3: Step3, initConfig, saveConfig } = props;\r\n  // `session` is used to refresh steps (mostly step 1) on restart.\r\n  const [session, setSession] = useState<number>(0);\r\n\r\n  const [initStates, setInitStates] = useState<[O1?, O2?]>([]);\r\n  const [o1, o2] = initStates;\r\n\r\n  const [configStack, setConfigStack] = useState<Config[]>((): Config[] => {\r\n    return [initConfig()];\r\n  });\r\n  function pushConfig(value: Config): void {\r\n    saveConfig(value);\r\n    setConfigStack([...configStack, value]);\r\n  }\r\n  function popConfig(): void {\r\n    setConfigStack(configStack.slice(0, configStack.length - 1));\r\n    saveConfig(configStack[configStack.length - 1]);\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Step1\r\n        key={`${session}-1`}\r\n        show={initStates.length === 0}\r\n        onNextStep={(result: O1, config: Config): void => {\r\n          pushConfig(config);\r\n          setInitStates([\r\n            result,\r\n          ]);\r\n        }}\r\n      />\r\n\r\n      {o1 == null ? null : (\r\n        <Step2\r\n          key={`${session}-2`}\r\n          show={initStates.length === 1}\r\n          args={o1}\r\n          onPrevStep={(): void => {\r\n            popConfig();\r\n            setInitStates([\r\n            ]);\r\n          }}\r\n          onNextStep={(result: O2, config: Config): void => {\r\n            pushConfig(config);\r\n            setInitStates([\r\n              initStates[0],\r\n              result,\r\n            ]);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {o2 == null ? null : (\r\n        <Step3\r\n          key={`${session}-3`}\r\n          show={initStates.length === 2}\r\n          args={o2}\r\n          onPrevStep={(): void => {\r\n            popConfig();\r\n            setInitStates([\r\n              initStates[0],\r\n            ]);\r\n          }}\r\n          onRestart={(config: Config): void => {\r\n            setInitStates([]);\r\n            setSession(session + 1);\r\n            setConfigStack([config]);\r\n            saveConfig(config);\r\n          }}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport { MultiStep };\r\n","import React, { useRef, useState, useEffect, useContext } from 'react';\r\nimport ClipboardJS from 'clipboard';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\nimport {\r\n  useStepperStyles,\r\n  EndStepProps,\r\n  Configuration,\r\n  PlayerConfig,\r\n  configContext,\r\n} from 'common';\r\nimport {\r\n  AnalysedLine,\r\n} from 'step-source';\r\nimport {\r\n  StepConfigResult,\r\n} from 'step-config';\r\nimport { renderContent, renderingSchemes } from 'common/renderers';\r\n\r\ntype StepRenderProps = EndStepProps<StepConfigResult, Configuration>;\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    Output: {\r\n      fontFamily: '微软雅黑',\r\n      fontSize: 14,\r\n      padding: '16px 14px',\r\n\r\n      borderColor: '#0000003b',\r\n      '&:hover': {\r\n        borderColor: '#000000de',\r\n      },\r\n      borderStyle: 'solid' ,\r\n      borderWidth: 1,\r\n      borderRadius: 4,\r\n      maxHeight: 200,\r\n      overflowY: 'scroll',\r\n\r\n      '& > p': {\r\n        margin: '0.5em 0',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\ninterface SnackbarControl {\r\n  body?: React.ReactNode;\r\n  open: boolean;\r\n}\r\n\r\nexport const StepRender: React.FC<StepRenderProps> = (props: StepRenderProps) => {\r\n  const { args, onPrevStep, onRestart } = props;\r\n  const config: Configuration = useContext<Configuration>(configContext);\r\n  const stepperClasses = useStepperStyles();\r\n  const classes = useStyles();\r\n  const playersConfig = useRef<Record<string, PlayerConfig>>(config.players || {}).current;\r\n  const [snackbarControl, setSnackbarControl] = useState<SnackbarControl>({\r\n    open: false,\r\n  });\r\n  const alertOnSnackbar = (body: React.ReactNode): void => {\r\n    setSnackbarControl({ body, open: true });\r\n  };\r\n  const scheme = renderingSchemes[config.general.rendererScheme];\r\n  const lines = args.lines\r\n    .filter((line: AnalysedLine) => playersConfig[line.playerId]?.enabled ?? true)\r\n    .map((line: AnalysedLine) => ({\r\n      content: line.content,\r\n      playerName: playersConfig[line.playerId]?.displayName ?? '错误',\r\n      playerColor: playersConfig[line.playerId]?.color ?? 'black',\r\n    }));\r\n\r\n  const [clipboard] = useState<ClipboardJS>((): ClipboardJS => {\r\n    const result: ClipboardJS = new ClipboardJS('#clipboard-button', {\r\n      target: (): Element => {\r\n        const element: Element | null = document.getElementById('result-body');\r\n        if (element == null) {\r\n          alertOnSnackbar('复制错误：找不到复制对象');\r\n          throw new Error('找不到复制对象');\r\n        }\r\n        return element;\r\n      },\r\n    });\r\n    result.on('success', () => {\r\n      setImmediate(() => alertOnSnackbar('已复制到剪贴板！'));\r\n    });\r\n    result.on('error', (e: ClipboardJS.Event) => {\r\n      alertOnSnackbar('复制错误！请双击文本框手动复制吧！');\r\n      console.error(e);\r\n    });\r\n    return result;\r\n  });\r\n\r\n  useEffect(() => {\r\n    return (): void => {\r\n      clipboard.destroy();\r\n    };\r\n  });\r\n\r\n  if (!props.show)\r\n    return null;\r\n\r\n  return (\r\n    <Grid container className={stepperClasses.Container}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={stepperClasses.Body}\r\n      >\r\n        <div\r\n          className={classes.Output}\r\n          onDoubleClick={(): void => {\r\n            const selection = window.getSelection();\r\n            if (!selection)\r\n              return;\r\n            const element = document.getElementById('result-body');\r\n            if (!element)\r\n              return;\r\n            const range = document.createRange();\r\n            range.selectNode(element);\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n          }}\r\n          id='result-body'\r\n        >\r\n          <IconButton\r\n            style={{\r\n              float: 'right',\r\n              marginTop: -15,\r\n            }}\r\n            id='clipboard-button'\r\n          >\r\n            <FileCopyIcon />\r\n          </IconButton>\r\n          {renderContent(lines, scheme, false)}\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} justifyContent=\"flex-end\" className={stepperClasses.Control}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={stepperClasses.ControlButton}\r\n          onClick={onPrevStep}\r\n        >\r\n          上一步\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={stepperClasses.ControlButton}\r\n          style={{ backgroundColor: '#d4d45f' }}\r\n          onClick={(): void => { onRestart(config); }}\r\n        >\r\n          再做一团\r\n        </Button>\r\n      </Grid>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={snackbarControl.open}\r\n        autoHideDuration={6000}\r\n        onClose={(): void => {\r\n          setSnackbarControl({\r\n            ...snackbarControl,\r\n            open: false,\r\n          });\r\n        }}\r\n        message={snackbarControl.body}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import forEach from 'lodash/forEach';\r\nimport size from 'lodash/size';\r\nimport max from 'lodash/max';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nfunction within(code: number, lowestIncluded: number, highestIncluded: number): boolean {\r\n  return code >= lowestIncluded && code <= highestIncluded;\r\n}\r\n\r\nfunction isValidStart(code: number): boolean {\r\n  return within(code, 0x0041, 0x005A) // Uppercase letter ASCII\r\n      || within(code, 0x0061, 0x007A) // Lowercase letter ASCII\r\n      || within(code, 0x00C0, 0x00D6) // EASCII 1\r\n      || within(code, 0x00D8, 0x00F6) // EASCII 2\r\n      || within(code, 0x00F8, 0x02AF) // Before modifiers\r\n      || within(code, 0x0370, 0x197F) // There are lots of exceptions but we ignore them for now\r\n      || within(code, 0x1E00, 0x1FFF) // Latin extended, greek extended\r\n      || within(code, 0x2160, 0x2188) // Roman numbers\r\n      || within(code, 0x3040, 0x30FF) // Kanas\r\n      || within(code, 0xAC00, 0xD7AF) // Hangul syllables\r\n      // || code == 0x5F // _  // Python allows underscore but we reserve it for dedup.\r\n      || within(code, 0x3400, 0x4DBF)   // CJK\r\n      || within(code, 0x4e00, 0x9fff)   // CJK\r\n      || within(code, 0xF900, 0xFAFF)   // CJK\r\n      || within(code, 0x20000, 0x2CEAF) // CJK\r\n      || within(code, 0x2F800, 0x2FA1F) // CJK\r\n  ;\r\n}\r\n\r\nfunction isValidContinue(code: number): boolean {\r\n  return isValidStart(code)\r\n      || within(code, 0x0030, 0x0039)  // ASCII digits\r\n      || within(code, 0x0300, 0x36F)   // Combining Diacritical Marks\r\n      || code == 0x005F   // Low line: connector punc\r\n      || code == 0x00B7   // Middle dot\r\n  ;\r\n}\r\n\r\nconst keywords: string[] = [\r\n  'False',\r\n  'await',\r\n  'else',\r\n  'import',\r\n  'pass',\r\n  'None',\r\n  'break',\r\n  'except',\r\n  'in',\r\n  'raise',\r\n  'True',\r\n  'class',\r\n  'finally',\r\n  'is',\r\n  'return',\r\n  'and',\r\n  'continue',\r\n  'for',\r\n  'lambda',\r\n  'try',\r\n  'as',\r\n  'def',\r\n  'from',\r\n  'nonlocal',\r\n  'while',\r\n  'assert',\r\n  'del',\r\n  'global',\r\n  'not',\r\n  'with',\r\n  'async',\r\n  'elif',\r\n  'if',\r\n  'or',\r\n  'yield',\r\n  'match',\r\n  'case',\r\n  '_',\r\n];\r\nconst keywordsMap: Record<string, boolean> = {};\r\nfunction isKeyword(s: string): boolean {\r\n  if (isEmpty(keywordsMap)) {\r\n    for (const keyword of keywords) {\r\n      keywordsMap[keyword] = true;\r\n    }\r\n  }\r\n  return keywordsMap[s] != null;\r\n}\r\n\r\nfunction sanitizeIdentifier(name: string): string {\r\n  let metFirst = false;\r\n  return name.split('').filter((c: string): boolean => {\r\n    if (!metFirst) {\r\n      return metFirst = isValidStart(c.codePointAt(0) ?? 0);\r\n    } else {\r\n      return isValidContinue(c.codePointAt(0) ?? 0);\r\n    }\r\n  }).join('');\r\n}\r\n\r\nexport function deriveRenpyNames(names: string[]): string[] {\r\n  // console.log(JSON.stringify(names));\r\n  let sourceDedupId = 0;\r\n  const sourceDedupTable: Record<string, boolean> = {};\r\n  // Map from \"key\" to \"name\"\r\n  const sourceDeduped: string[] = [];\r\n  for (const name of names) {\r\n    if (sourceDedupTable[name] != null) {\r\n      sourceDedupId += 1;\r\n      sourceDeduped.push(`${name}${sourceDedupId}`);\r\n    } else {\r\n      sourceDeduped.push(name);\r\n      sourceDedupTable[name] = true;\r\n    }\r\n  }\r\n  // console.log(JSON.stringify(sourceDeduped));\r\n\r\n  // Map from \"key\" to \"result\"\r\n  const finished: Record<string, string> = {};\r\n  let dedupId = 0;\r\n  function nextDedupName(): string {\r\n    dedupId += 1;\r\n    return `_C${dedupId}`;\r\n  }\r\n\r\n  // Map from \"key\" to \"chars\"\r\n  let remaining: Record<string, string[]> = {};\r\n  // Map from \"filteredKey\" to \"key\"\r\n  const entireDedup: Record<string, string> = {};\r\n  for (const name of sourceDeduped) {\r\n    if (isEmpty(name)) {\r\n      finished[name] = nextDedupName();\r\n    } else {\r\n      const sanitized = sanitizeIdentifier(name).split('');\r\n      const existingKey = entireDedup[sanitized.join('')];\r\n      if (sanitized.length == 0) {\r\n        finished[name] = nextDedupName();\r\n      } else if (existingKey != null) {\r\n        finished[name] = nextDedupName();\r\n        finished[existingKey] = nextDedupName();\r\n        delete remaining[existingKey];\r\n      } else {\r\n        remaining[name] = sanitized;\r\n        entireDedup[sanitized.join('')] = name;\r\n      }\r\n    }\r\n  }\r\n  const longest = max(Object.values(remaining).map((chars) => chars.length)) ?? 0;\r\n  // console.log('## Sanitized');\r\n  // console.log(remaining);\r\n\r\n  // Map from \"key\" to \"chars\"\r\n  let nextRemaining: Record<string, string[]> = {};\r\n\r\n  for (let curLen = 1; curLen <= longest; curLen += 1) {\r\n    if (isEmpty(remaining)) {\r\n      break;\r\n    }\r\n    // console.log(`== Round ${curLen} ==`);\r\n    // console.log(`Remaining: ${JSON.stringify(remaining)}`);\r\n\r\n    // Map from \"attempt\" to \"key\"\r\n    const working: Record<string, string> = {};\r\n    // Test each entry in `remaining`. Record duplicates in `nextRemaining`.\r\n    // Record non-dup results in `finished`.\r\n    forEach(remaining, (chars: string[], key: string) => {\r\n      // console.log(`key ${key} char ${chars}`);\r\n      const attempt = chars.slice(0, curLen).join('');\r\n      if (isKeyword(attempt)) {\r\n        if (chars.length <= curLen) {\r\n          finished[key] = nextDedupName();\r\n        } else {\r\n          nextRemaining[key] = chars;\r\n        }\r\n      } else if (working[attempt] == null) {\r\n        working[attempt] = key;\r\n        finished[key] = attempt; // Might be cleared later.\r\n      } else {\r\n        nextRemaining[key] = chars;\r\n        nextRemaining[working[attempt]] = remaining[working[attempt]];\r\n        delete finished[working[attempt]];\r\n      }\r\n    });\r\n    remaining = nextRemaining;\r\n    nextRemaining = {};\r\n  }\r\n  if (size(finished) != size(names)) {\r\n    console.error('Algorithm error', names);\r\n    throw Error('Algorithm error');\r\n  }\r\n  // console.log(JSON.stringify(finished));\r\n  return sourceDeduped.map((key) => finished[key]);\r\n}\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport escapeHtml from 'escape-html';\r\nimport join from 'lodash/join';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport { deriveRenpyNames } from './derive-renpy-names';\r\nimport { repeat } from 'lodash';\r\n\r\nexport type RendererId =\r\n    'standard-rich'\r\n  | 'bold-rich'\r\n  | 'standard-html'\r\n  | 'bold-html'\r\n  | 'standard-bbs'\r\n  | 'bold-bbs'\r\n  | 'tab-rich'\r\n  | 'renpy';\r\n\r\nexport interface RendereeLine {\r\n  content: string[];\r\n  playerName: string;\r\n  playerColor: string;\r\n}\r\n\r\ntype RenderHandler = (lines: RendereeLine[]) => React.ReactNode;\r\nexport interface RenderingScheme {\r\n  id: RendererId;\r\n  name: string;\r\n  description: string;\r\n  allowNewPalette: boolean;\r\n  previewRenderer: RenderHandler;\r\n  finalRenderer: RenderHandler;\r\n}\r\n\r\nconst standardLineRenderer = (leftDiv: string, rightDiv: string) => {\r\n  function StandardLine(lines: RendereeLine[]): React.ReactNode {\r\n    return lines.map((line: RendereeLine, key: number) => (\r\n      <p\r\n        key={key}\r\n        style={{\r\n          color: line.playerColor,\r\n        }}\r\n      >\r\n        {`${leftDiv}${line.playerName}${rightDiv}`}\r\n        {line.content.map((contentLine: string, contentId: number) => {\r\n          const newLine = contentId === 0 ? [] : [<br key={`br-${contentId}`}/>];\r\n          return newLine.concat([<span key={contentId}>{contentLine}</span>]);\r\n        })}\r\n      </p>\r\n    ));\r\n  }\r\n  return StandardLine;\r\n};\r\n\r\nconst bbsFinalLineRenderer = (leftDiv: string, rightDiv: string) => {\r\n  function BbsFinalLine(lines: RendereeLine[]): React.ReactNode {\r\n    return lines.map((line: RendereeLine, key: number) => (\r\n      <span\r\n        key={key}\r\n      >\r\n        {`[color=${line.playerColor}]${leftDiv}${line.playerName}${rightDiv}`}\r\n        {line.content.map((contentLine: string, contentId: number) => {\r\n          const newLine = contentId === 0 ? [] : [<br key={`br-${contentId}`}/>];\r\n          return newLine.concat([<span key={contentId}>{contentLine}</span>]);\r\n        })}\r\n        {`[/color]`}\r\n        <br/>\r\n      </span>\r\n    ));\r\n  }\r\n  return BbsFinalLine;\r\n};\r\n\r\nconst htmlFinalLineRenderer = (leftDiv: string, rightDiv: string) => {\r\n  function HtmlFinalLine(lines: RendereeLine[]): React.ReactNode {\r\n    return lines.map((line: RendereeLine, key: number) => (\r\n      <span\r\n        key={key}\r\n      > {[\r\n          `<p style=\"color: ${line.playerColor}\">`,\r\n          escapeHtml(`${leftDiv}${line.playerName}${rightDiv}`),\r\n          ...line.content.map((contentLine: string, contentId: number) => {\r\n            const newLine = contentId === 0 ? [] : [<br key={`br-${contentId}`}/>, '<br />'];\r\n            return newLine.concat([<span key={contentId}>{escapeHtml(contentLine)}</span>]);\r\n          }),\r\n          `</p>`,\r\n        ]}\r\n        <br/>\r\n      </span>\r\n    ));\r\n  }\r\n  return HtmlFinalLine;\r\n};\r\n\r\nconst schemeAngularBracketRich: RenderingScheme = {\r\n  id: 'standard-rich',\r\n  name: '富文本，尖括号分割',\r\n  description: '最常见的格式。输出富文本，可直接复制粘贴到Word里。预览如下：',\r\n  allowNewPalette: true,\r\n  previewRenderer: standardLineRenderer('<', '> '),\r\n  finalRenderer: standardLineRenderer('<', '> '),\r\n};\r\n\r\nconst schemeBoldBracketRich: RenderingScheme = {\r\n  id: 'bold-rich',\r\n  name: '富文本，粗括号分割',\r\n  description: '常见格式。输出富文本，可直接复制粘贴到Word里。预览如下：',\r\n  allowNewPalette: true,\r\n  previewRenderer: standardLineRenderer('【', '】'),\r\n  finalRenderer: standardLineRenderer('【', '】'),\r\n};\r\n\r\nconst schemeAngularBracketBbs: RenderingScheme = {\r\n  id: 'standard-bbs',\r\n  name: 'BBS代码，尖括号分割',\r\n  description: '最常见的格式。输出BBS代码，可复制粘贴到果园。最终效果预览如下：',\r\n  allowNewPalette: false,\r\n  previewRenderer: standardLineRenderer('<', '> '),\r\n  finalRenderer: bbsFinalLineRenderer('<', '> '),\r\n};\r\n\r\nconst schemeBoldBracketBbs: RenderingScheme = {\r\n  id: 'bold-bbs',\r\n  name: 'BBS代码，粗括号分割',\r\n  description: '常见格式。输出BBS代码，可复制粘贴到果园。最终效果预览如下：',\r\n  allowNewPalette: false,\r\n  previewRenderer: standardLineRenderer('【', '】'),\r\n  finalRenderer: bbsFinalLineRenderer('【', '】'),\r\n};\r\n\r\nconst schemeAngularBracketHtml: RenderingScheme = {\r\n  id: 'standard-html',\r\n  name: 'HTML，尖括号分割',\r\n  description: '最常见的格式。输出BBS代码，可复制粘贴到100Dice。最终效果预览如下：',\r\n  allowNewPalette: true,\r\n  previewRenderer: standardLineRenderer('<', '> '),\r\n  finalRenderer: htmlFinalLineRenderer('<', '> '),\r\n};\r\n\r\nconst schemeBoldBracketHtml: RenderingScheme = {\r\n  id: 'bold-html',\r\n  name: 'HTML，粗括号分割',\r\n  description: '常见格式。输出BBS代码，可复制粘贴到100Dice。最终效果预览如下：',\r\n  allowNewPalette: true,\r\n  previewRenderer: standardLineRenderer('【', '】'),\r\n  finalRenderer: htmlFinalLineRenderer('【', '】'),\r\n};\r\n\r\nconst schemeTabRich: RenderingScheme = {\r\n  id: 'tab-rich',\r\n  name: '【特殊】Tab分割',\r\n  description: '以Tab分割各元素，保证垂直对齐的特殊格式。输出富文本，可直接复制粘贴到Word等软件中。大致效果预览如下（最终效果取决于文档设定）：',\r\n  allowNewPalette: true,\r\n  previewRenderer: (lines: RendereeLine[]): React.ReactNode => {\r\n    const renderedLines = lines.map((line: RendereeLine, key: number) => (\r\n      <tr\r\n        key={key}\r\n        style={{\r\n          color: line.playerColor,\r\n        }}\r\n      >\r\n        <td>\r\n          {line.playerName}\r\n        </td>\r\n        <td>\r\n          {line.content.map((contentLine: string, contentId: number) => {\r\n            const newLine = contentId === 0 ? [] : [<br key={`br-${contentId}`}/>];\r\n            return newLine.concat([<span key={contentId}>{contentLine}</span>]);\r\n          })}\r\n        </td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <table className=\"tab-renderer-preview-table\">\r\n        {renderedLines}\r\n      </table>\r\n    );\r\n  },\r\n  finalRenderer: (lines: RendereeLine[]): React.ReactNode => {\r\n    return lines.map((line: RendereeLine, key: number) => (\r\n      <pre\r\n        key={key}\r\n        style={{ color: line.playerColor }}\r\n        dangerouslySetInnerHTML={{\r\n          __html: `&#9;${escapeHtml(line.playerName)}&#9;${join(line.content.map(escapeHtml), '&#11;')}`\r\n        }}\r\n      />\r\n    ));\r\n  },\r\n};\r\n\r\nfunction escapeString(s: string): string {\r\n  return s.replaceAll(/[\\\\\"]/g, (s: string) => `\\\\${s}`);\r\n}\r\n\r\nfunction interlaceNewline(lines: ReactNode[], newlines: number, start: number): ReactNode {\r\n  const result: ReactNode[] = [];\r\n  lines.forEach((line: ReactNode, index: number) => {\r\n    if (index !== 0) {\r\n      for (let i = 0; i < newlines; i++)\r\n        result.push(<br key={start + index * newlines + i} />);\r\n    }\r\n    result.push(line);\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction renpyRenderer(lines: RendereeLine[]): React.ReactNode {\r\n  const profiles = uniqBy(lines, (line: RendereeLine) => line.playerName);\r\n  const renpyNames = deriveRenpyNames(profiles.map((profile: RendereeLine) => profile.playerName));\r\n  const nameMap: Record<string, string> = {};\r\n  renpyNames.forEach((renpyName: string, index: number) => {\r\n    nameMap[profiles[index].playerName] = renpyName;\r\n  });\r\n\r\n  const header = profiles.map((line: RendereeLine, index: number) => {\r\n    return `define ${renpyNames[index]} = Character('${escapeString(line.playerName)}', color=\"${line.playerColor}\")`;\r\n  });\r\n  const contents = lines.map((line: RendereeLine) => {\r\n    const renpyName = nameMap[line.playerName];\r\n    const nameLengthSpaces = repeat(' ', renpyName.length);\r\n    const body = line.content.map((contentLine: string) => {\r\n      return escapeString(contentLine);\r\n    }).join(`\" +\\n     ${nameLengthSpaces}\"`);\r\n    return `    ${renpyName} \"${body}\"`;\r\n  });\r\n  return (\r\n    <pre>\r\n      {interlaceNewline(header, 1, 0)}\r\n      <br key={header.length} />\r\n      <br key={header.length + 1} />\r\n      label start:\r\n      <br key={header.length + 2} />\r\n      {interlaceNewline(contents, 2, header.length + 3)}\r\n    </pre>\r\n  );\r\n}\r\n\r\nconst schemeRenpy: RenderingScheme = {\r\n  id: 'renpy',\r\n  name: '【特殊】Renpy',\r\n  description: '输出可以直接导入进Renpy的格式：',\r\n  allowNewPalette: true,\r\n  previewRenderer: renpyRenderer,\r\n  finalRenderer: renpyRenderer,\r\n};\r\n\r\n\r\nexport const renderingSchemes: Record<RendererId, RenderingScheme> = {\r\n  'standard-rich': schemeAngularBracketRich,\r\n  'bold-rich': schemeBoldBracketRich,\r\n  'standard-bbs': schemeAngularBracketBbs,\r\n  'bold-bbs': schemeBoldBracketBbs,\r\n  'standard-html': schemeAngularBracketHtml,\r\n  'bold-html': schemeBoldBracketHtml,\r\n  'tab-rich': schemeTabRich,\r\n  'renpy': schemeRenpy,\r\n};\r\n\r\nexport function renderContent(lines: RendereeLine[], scheme: RenderingScheme, preview: boolean) : React.ReactNode {\r\n  const renderer = preview ? scheme.previewRenderer : scheme.finalRenderer;\r\n  return renderer(lines);\r\n}\r\n","import compact from 'lodash/compact';\r\nimport trim from 'lodash/trim';\r\nimport flow from 'lodash/flow';\r\n\r\nexport interface ParsedPlayer {\r\n  name: string;\r\n  number?: string;\r\n  title?: string;\r\n}\r\n\r\nexport interface ParsedLine {\r\n  time?: string;\r\n  player: ParsedPlayer;\r\n  content: string[];\r\n}\r\n\r\nexport interface ParseResult {\r\n  logLines: ParsedLine[];\r\n}\r\n\r\ninterface ParsedHeader {\r\n  player: ParsedPlayer;\r\n  time?: string;\r\n  content?: string;\r\n}\r\n\r\ntype HeaderParser = (line: string) => ParsedHeader | null;\r\ntype LogLineConverter = (logLine: ParsedLine) => ParsedLine | null;\r\n\r\ninterface LogConfig {\r\n  headerParser: HeaderParser;\r\n  logLineConverter: LogLineConverter;\r\n}\r\n\r\nfunction removeSystemTextConverter(logLine: ParsedLine | null): ParsedLine | null {\r\n  if (logLine == null)\r\n    return null;\r\n  const lines = logLine.content;\r\n\r\n  const withdrawParser = /^.*撤回了一条消息/;\r\n  const withdrawEnglishParser = /^.* recalled a message( Re-edit)?$/;\r\n  const withdrawMemberParser = /^.*撤回了成员.*的一条消息$/;\r\n  const withdrawMember2Parser = /^.*撤回了一条成员消息$/;\r\n  const commonFriendsParser = /^你和.*有\\d+个共同好友，点击添加好友。$/;\r\n  const joinMemberParser = /^.*加入本群。$/;\r\n  const inviteMemberParser = /^.*邀请.*加入了本群。$/;\r\n\r\n  let end = lines.length - 1;\r\n  for (; end >=0; end--) {\r\n    if ([\r\n      /^ *$/,\r\n      withdrawParser,\r\n      withdrawEnglishParser,\r\n      withdrawMemberParser,\r\n      withdrawMember2Parser,\r\n      commonFriendsParser,\r\n      joinMemberParser,\r\n      inviteMemberParser,\r\n    ].some((toMatch: RegExp) => toMatch.exec(lines[end]))) {\r\n      continue;\r\n    }\r\n    break;\r\n  }\r\n  logLine.content = logLine.content.slice(0, end + 1);\r\n  return logLine;\r\n}\r\n\r\nconst regNumber = /\\(\\d+\\)|<.+@.+\\..+>/;\r\nconst regTitle = /(?:【(.{1,6})】)?/;\r\nconst regTime = /(?:(?:上午|下午) )?\\d{1,2}:\\d{2}:\\d{2}(?: (?:AM|PM))?/;\r\n\r\nfunction removeMobileDateConverter(logLine: ParsedLine | null): ParsedLine | null {\r\n  if (logLine == null)\r\n    return null;\r\n  const lines = logLine.content;\r\n\r\n  const dateParser = /^— —  \\d{4}-\\d{1,2}-\\d{1,2}  — —$/;\r\n\r\n  let end = lines.length - 1;\r\n  for (; end >=0; end--) {\r\n    if ([\r\n      /^ *$/,\r\n      dateParser,\r\n    ].some((toMatch: RegExp) => toMatch.exec(lines[end]))) {\r\n      continue;\r\n    }\r\n    break;\r\n  }\r\n  logLine.content = logLine.content.slice(0, end + 1);\r\n  return logLine;\r\n}\r\n\r\nfunction removeMessageManagerSystemTextConverter(logLine: ParsedLine | null): ParsedLine | null {\r\n  if (logLine == null)\r\n    return null;\r\n  const lines = logLine.content;\r\n\r\n  const dateParser = /^ \\d{4}-\\d{2}-\\d{2}$/;\r\n  const withdrawParser = new RegExp(`^${regTime.source}.*撤回了一条消息`);\r\n  const withdrawEnglishParser = new RegExp(`^${regTime.source}.* recalled a message( Re-edit)?`);\r\n  const withdrawMemberParser = new RegExp(`^${regTime.source}.*撤回了成员.*的一条消息$`);\r\n  const withdrawMember2Parser = new RegExp(`^${regTime.source}.*撤回了一条成员消息$`);\r\n  // const commonFriendsParser = /^你和.*有\\d+个共同好友，点击添加好友。$/;\r\n  const joinMemberParser = new RegExp(`^${regTime.source}.*加入本群。$`);\r\n  // const inviteMemberParser = /^.*邀请.*加入了本群。$/;\r\n\r\n  let end = lines.length - 1;\r\n  for (; end >=0; end--) {\r\n    if ([\r\n      /^ *$/,\r\n      dateParser,\r\n      withdrawParser,\r\n      withdrawEnglishParser,\r\n      withdrawMemberParser,\r\n      withdrawMember2Parser,\r\n      joinMemberParser,\r\n    ].some((toMatch: RegExp) => toMatch.exec(lines[end]))) {\r\n      continue;\r\n    }\r\n    break;\r\n  }\r\n  logLine.content = logLine.content.slice(0, end + 1);\r\n  return logLine;\r\n}\r\n\r\nfunction defaultConverter(logLine: ParsedLine | null): ParsedLine | null {\r\n  if (logLine == null)\r\n    return null;\r\n  const lines = logLine.content;\r\n  // Remove starting and trailing empty lines.\r\n  while(lines.length > 0 && lines[0].trim() === '') {\r\n    lines.splice(0, 1);\r\n  }\r\n  while(lines.length > 0 && lines[lines.length-1].trim() === '') {\r\n    lines.splice(lines.length-1, 1);\r\n  }\r\n  if (lines.length === 0)\r\n    return null;\r\n  return logLine;\r\n}\r\n\r\nfunction trimNumber(src: string): string {\r\n  return trim(src, '()<>');\r\n}\r\n\r\n// Export from log\r\n// E.g. \"2019-09-23 8:43:38 PM 骰娘-Roll100(872001750)\"\r\n// E.g. \"2019-09-23 8:43:38 PM 骰娘-Roll100\"\r\nconst exportFromLog: LogConfig = {\r\n  headerParser: (line: string): ParsedHeader | null => {\r\n    const regDateName = new RegExp(`\\\\d{4}-\\\\d{2}-\\\\d{2} ${regTime.source}`);\r\n    const regHeader = new RegExp(`^(${regDateName.source}) (.*?)(${regNumber.source})?$`);\r\n    const matches = regHeader.exec(line);\r\n    if (!matches)\r\n      return null;\r\n    const [_all, time, name, number] = matches;\r\n    return {\r\n      player: {\r\n        name,\r\n        number: number == null ? undefined : trimNumber(number),\r\n      },\r\n      time,\r\n    };\r\n  },\r\n  logLineConverter: (logLine: ParsedLine): ParsedLine | null => {\r\n    if (['10000', '1000000'].includes(logLine.player.number || ''))\r\n      return null;\r\n    return defaultConverter(logLine);\r\n  },\r\n};\r\n\r\n// Copy from chat mainwindow or sidewindow\r\n// E.g. \"【冒泡】无情的围观熊 2/14/2020 9:16:13 PM\"\r\n// E.g. \"【煤油】丧 丧 熊 9:59:54 PM\"\r\nconst copyFromChat: LogConfig = {\r\n  headerParser: (line: string): ParsedHeader | null => {\r\n    const regDateTime = new RegExp(`(?:\\\\d{1,4}\\\\/\\\\d{1,2}\\\\/\\\\d{1,4} (?:星期. )?)?${regTime.source}`);\r\n    const regHeader = new RegExp(`^${regTitle.source}(.*?) (${regDateTime.source})$`);\r\n    const matches = regHeader.exec(line);\r\n    if (!matches)\r\n      return null;\r\n    const [_all, title, name, time] = matches;\r\n    return {\r\n      player: {\r\n        name,\r\n        title,\r\n      },\r\n      time,\r\n    };\r\n  },\r\n  logLineConverter: (logLine: ParsedLine): ParsedLine | null => {\r\n    return flow(\r\n      removeSystemTextConverter,\r\n      defaultConverter,\r\n    )(logLine);\r\n  },\r\n};\r\n\r\n// Copy from message manager\r\n// E.g. \"织练取(958884) 3:13:28 AM\"\r\nconst copyFromMessageManager: LogConfig = {\r\n  headerParser: (line: string): ParsedHeader | null => {\r\n    const regHeader = new RegExp(`^${regTitle.source}(.*?)(${regNumber.source}) (${regTime.source})$`);\r\n    const matches = regHeader.exec(line);\r\n    if (!matches)\r\n      return null;\r\n    const [_all, title, name, number, time] = matches;\r\n    return {\r\n      player: {\r\n        name,\r\n        title,\r\n        number: trimNumber(number),\r\n      },\r\n      time,\r\n    };\r\n  },\r\n  logLineConverter: (logLine: ParsedLine): ParsedLine | null => {\r\n    return flow(\r\n      removeMessageManagerSystemTextConverter,\r\n      defaultConverter,\r\n    )(logLine);\r\n  },\r\n};\r\n\r\n// Copy from mobile\r\n// E.g. \"a dark ideation  23:50:40\"\r\nconst copyFromMobile: LogConfig = {\r\n  headerParser: (line: string): ParsedHeader | null => {\r\n    const regHeader = /^(.*?) {2}(\\d{1,2}:\\d{2}:\\d{2}) *$/;\r\n    const matches = regHeader.exec(line);\r\n    if (!matches)\r\n      return null;\r\n    const [_all, name, time] = matches;\r\n    return {\r\n      player: {\r\n        name,\r\n      },\r\n      time,\r\n    };\r\n  },\r\n  logLineConverter: (logLine: ParsedLine): ParsedLine | null => {\r\n    return flow(\r\n      removeMobileDateConverter,\r\n      defaultConverter,\r\n    )(logLine);\r\n  },\r\n};\r\n\r\n// 溯洄骰的Log记录器\r\n// E.g. \"名字(123456) 2021-11-08 04:07:37\"\r\nconst shikiLogRecord: LogConfig = {\r\n  headerParser: (line: string): ParsedHeader | null => {\r\n    const regHeader = new RegExp(`^(.*?)(${regNumber.source}) (\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2})$`);\r\n    const matches = regHeader.exec(line);\r\n    if (!matches)\r\n      return null;\r\n    const [_all, name, number, time] = matches;\r\n    return {\r\n      player: {\r\n        name,\r\n        number: trimNumber(number),\r\n      },\r\n      time,\r\n    };\r\n  },\r\n  logLineConverter: (logLine: ParsedLine): ParsedLine | null => {\r\n    return flow(\r\n      defaultConverter,\r\n    )(logLine);\r\n  },\r\n};\r\n\r\n// 塔骰的Log记录器\r\n// E.g. \"<2022-03-04 11:33:39.0>\t[小明]:\t内容内容内容内容\"\r\nconst sinaNyaLogRecord: LogConfig = {\r\n  headerParser: (line: string): ParsedHeader | null => {\r\n    const regHeader = /^<(.+?)>\t\\[(.*?)\\]:\t(.*)$/;\r\n    const matches = regHeader.exec(line);\r\n    if (!matches)\r\n      return null;\r\n    const [_all, time, name, content] = matches;\r\n    return {\r\n      player: {\r\n        name,\r\n      },\r\n      time,\r\n      content,\r\n    };\r\n  },\r\n  logLineConverter: (logLine: ParsedLine): ParsedLine | null => {\r\n    return flow(\r\n      defaultConverter,\r\n    )(logLine);\r\n  },\r\n};\r\n\r\n// Reparse log with angular brackes\r\n// E.g. \"<小明> 内容内容内容内容\"\r\nconst reparseAngularBracket: LogConfig = {\r\n  headerParser: (line: string): ParsedHeader | null => {\r\n    const regHeader = /^<(.+)> (.+)$/;\r\n    const matches = regHeader.exec(line);\r\n    if (!matches)\r\n      return null;\r\n    const [_all, name, content] = matches;\r\n    return {\r\n      player: {\r\n        name,\r\n      },\r\n      content,\r\n    };\r\n  },\r\n  logLineConverter: (logLine: ParsedLine): ParsedLine | null => {\r\n    return flow(\r\n      defaultConverter,\r\n    )(logLine);\r\n  },\r\n};\r\n\r\n// Reparse log with bold brackes\r\n// E.g. \"【小明】内容内容内容内容\"\r\nconst reparseBoldBracket: LogConfig = {\r\n  headerParser: (line: string): ParsedHeader | null => {\r\n    const regHeader = /^【(.+)】(.+)$/;\r\n    const matches = regHeader.exec(line);\r\n    if (!matches)\r\n      return null;\r\n    const [_all, name, content] = matches;\r\n    return {\r\n      player: {\r\n        name,\r\n      },\r\n      content,\r\n    };\r\n  },\r\n  logLineConverter: (logLine: ParsedLine): ParsedLine | null => {\r\n    return flow(\r\n      defaultConverter,\r\n    )(logLine);\r\n  },\r\n};\r\n\r\nexport function parseChat(data: string): ParseResult {\r\n  const logLines: ParsedLine[] = [];\r\n  let firstLogConfig: LogConfig | undefined = undefined;\r\n  for (const line of data.split('\\n')) {\r\n    const parsedHeader = ((): ParsedHeader | null => {\r\n      if (firstLogConfig)\r\n        return firstLogConfig.headerParser(line);\r\n      for (const logConfig of [\r\n        shikiLogRecord,\r\n        copyFromMessageManager,\r\n        copyFromMobile,\r\n        exportFromLog,\r\n        copyFromChat,\r\n        reparseAngularBracket,\r\n        reparseBoldBracket,\r\n        sinaNyaLogRecord,\r\n      ]) {\r\n        const result = logConfig.headerParser(line);\r\n        if (result) {\r\n          firstLogConfig = logConfig;\r\n          return result;\r\n        }\r\n      }\r\n      return null;\r\n    })();\r\n    if (parsedHeader) {\r\n      const { player, time, content } = parsedHeader;\r\n      logLines.push({\r\n        player,\r\n        time,\r\n        content: content ? [content] : [],\r\n      });\r\n    } else {\r\n      if (firstLogConfig) {\r\n        const currentLogLine: ParsedLine | undefined = logLines[logLines.length - 1];\r\n        // Content after a recognizable header\r\n        if (currentLogLine)\r\n          currentLogLine.content.push(line);\r\n      } else {\r\n        // Unrecognizable content before the first header\r\n        // Do nothing\r\n      }\r\n    }\r\n  }\r\n  if (!firstLogConfig)\r\n    return { logLines: [] };\r\n\r\n  const convertedLogLines = compact(\r\n    logLines.map(firstLogConfig.logLineConverter)\r\n  );\r\n  return { logLines: convertedLogLines };\r\n}\r\n","import values from 'lodash/values';\r\n\r\nimport { parseChat, ParseResult, ParsedPlayer } from './parser_chat';\r\n\r\nexport interface AnalysedLine {\r\n  playerId: string;\r\n  time?: string;\r\n  title?: string;\r\n  content: string[];\r\n}\r\n\r\nexport interface AnalysedPlayer {\r\n  playerId: string;\r\n  names: Set<string>;\r\n}\r\n\r\nexport interface GroupResult {\r\n  players: AnalysedPlayer[];\r\n  lines: AnalysedLine[];\r\n}\r\n\r\nfunction getPlayerId(player: ParsedPlayer): string {\r\n  if (player.number)\r\n    return `qq:${player.number}`;\r\n  return `name:${player.name}`;\r\n}\r\n\r\nfunction defaultGroupedPlayer(playerId: string, number: string | undefined): AnalysedPlayer {\r\n  const names = new Set<string>();\r\n  if (number != null)\r\n    names.add(number);\r\n  return {\r\n    playerId: playerId,\r\n    names: names,\r\n  };\r\n}\r\n\r\nfunction groupByPlayers(result: ParseResult): GroupResult {\r\n  const lines: AnalysedLine[] = [];\r\n  const players: Record<string, AnalysedPlayer> = {};\r\n  for (const parsedLine of result.logLines) {\r\n    const { player, time, content } = parsedLine;\r\n    const playerId = getPlayerId(player);\r\n    if (!players.playerId)\r\n      players[playerId] = defaultGroupedPlayer(playerId, player.number);\r\n    players[playerId].names.add(player.name);\r\n    lines.push({\r\n      playerId: playerId,\r\n      time,\r\n      title: player.title,\r\n      content,\r\n    });\r\n  }\r\n  return {\r\n    lines,\r\n    players: values(players),\r\n  };\r\n}\r\n\r\nexport function parseAndGroup(source: string): GroupResult {\r\n  const parseResult: ParseResult = parseChat(source);\r\n  return groupByPlayers(parseResult);\r\n}\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {\r\n  useStepperStyles,\r\n  AlertDialog,\r\n  AlertDialogControl,\r\n  StartStepProps,\r\n  Configuration,\r\n  configContext,\r\n} from 'common';\r\nimport { parseAndGroup } from './group';\r\nimport { analyse, AnalyseResult } from './analyse';\r\n\r\nexport type StepSourceResult = AnalyseResult;\r\n\r\ntype StepSourceProps = StartStepProps<StepSourceResult, Configuration>;\r\n\r\n\r\nfunction processResult(text: string): AnalyseResult | undefined {\r\n  const groupResult = parseAndGroup(text);\r\n  if (groupResult.players.length === 0 || groupResult.lines.length === 0) {\r\n    return undefined;\r\n  }\r\n  return analyse(groupResult);\r\n}\r\n\r\nexport const StepSource: React.FC<StepSourceProps> = (props: StepSourceProps) => {\r\n  const { onNextStep } = props;\r\n  const config: Configuration = useContext<Configuration>(configContext);\r\n  const stepperClasses = useStepperStyles();\r\n  const [text, setText] = useState<string>('');\r\n\r\n  const [alertControl, setAlertControl] = useState<AlertDialogControl>({\r\n    open: false,\r\n  });\r\n\r\n  if (!props.show)\r\n    return null;\r\n\r\n  return (\r\n    <Grid container className={stepperClasses.Container}>\r\n      <Grid item xs={12} className={stepperClasses.Body}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"原文\"\r\n          placeholder=\"把原文粘贴到这里，然后点击下一步。\"\r\n          variant=\"outlined\"\r\n          multiline\r\n          fullWidth\r\n          rows={10}\r\n          className='Source-textfield'\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>): void => {\r\n            setText(event.target.value);\r\n          }}\r\n          value={text}\r\n        />\r\n      </Grid>\r\n      <Grid container item xs={12} justifyContent=\"flex-end\" className={stepperClasses.Control}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={text.length < 5}\r\n          className={stepperClasses.ControlButton}\r\n          onClick={(): void => {\r\n            const result = processResult(text);\r\n            if (result == null) {\r\n              setAlertControl({\r\n                open: true,\r\n                body: '无法从这段记录中找到可识别的部分！请检查后再试一次吧！',\r\n              });\r\n            } else {\r\n              onNextStep(result, config);\r\n            }\r\n          }}\r\n        >\r\n          下一步\r\n        </Button>\r\n      </Grid>\r\n      <AlertDialog\r\n        onClose={(): void => setAlertControl({\r\n          ...alertControl,\r\n          open: false,\r\n        })}\r\n        {...alertControl}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","export function regularizeQuotes(lines: string[]): string[] {\r\n  const inQuoteChars: string[] = ['\"', '“', '”'];\r\n  const outQuoteChars: string[] = ['“', '”'];\r\n  let now = 1;\r\n\r\n  function regularizeQuotesLine(line: string): string {\r\n    return line.split('').map((ch: string) => {\r\n      if (inQuoteChars.includes(ch)) {\r\n        now = 1 - now;\r\n        return outQuoteChars[now];\r\n      }\r\n      return ch;\r\n    }).join('');\r\n  }\r\n\r\n  return lines.map(regularizeQuotesLine);\r\n}\r\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport {\r\n  ColorPalette,\r\n  PaletteInfo,\r\n  colorPalettes,\r\n} from 'common';\r\nimport { DescribedColor } from 'common/colors';\r\n\r\ninterface PaletteSwitchProps {\r\n  value: ColorPalette;\r\n  setValue: (value: ColorPalette) => void;\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((/*theme: Theme*/) =>\r\n  createStyles({\r\n    outerButton: {\r\n      marginLeft: 10,\r\n    },\r\n    paper: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      background: '#f5f5f5',\r\n    },\r\n    menu: {\r\n      flex: '100pt 0 0',\r\n    },\r\n    descriptionBox: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      fontSize: 'medium',\r\n      overflowX: 'hidden',\r\n    },\r\n    descriptionText: {\r\n      flex: '80pt 1 0',\r\n      padding: 20,\r\n    },\r\n    descriptionDisplay: {\r\n      flex: '20pt 0 0',\r\n      height: 20,\r\n      display: 'inline-flex',\r\n      background: 'white',\r\n    },\r\n    descriptionDisplayCell: {\r\n      flex: '1',\r\n      height: 20,\r\n    },\r\n  }),\r\n);\r\n\r\nexport const PaletteSwitch: React.FC<PaletteSwitchProps> = (props: PaletteSwitchProps) => {\r\n  const { value, setValue, className } = props;\r\n  const classes = useStyles();\r\n  const [dialogOpen, setDialogOpen] = React.useState<boolean>(false);\r\n  const [dialogSelect, setDialogSelect] = React.useState<ColorPalette>(Object.values(colorPalettes)[0].id);\r\n\r\n  const current = colorPalettes[value];\r\n\r\n  const handleOpenDialog = () => {\r\n    setDialogOpen(true);\r\n    setDialogSelect(value);\r\n  };\r\n\r\n  const handleConfirmDialog = () => {\r\n    setDialogOpen(false);\r\n    setValue(dialogSelect);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      当前配色方案：{current.name}\r\n      <Button\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        onClick={handleOpenDialog}\r\n        className={classes.outerButton}\r\n      >\r\n        切换\r\n      </Button>\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={handleCloseDialog}\r\n      >\r\n        <DialogTitle>更换配色方案</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            你当前的配色方案是“{current.name}”。<br />\r\n          </DialogContentText>\r\n          <Paper className={classes.paper}>\r\n            <MenuList className={classes.menu}>\r\n              {Object.values(colorPalettes).map((palette: PaletteInfo) => (\r\n                <MenuItem\r\n                  key={palette.id}\r\n                  selected={palette.id == dialogSelect}\r\n                  onClick={() => { setDialogSelect(palette.id); }}\r\n                >\r\n                  {palette.name}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n            <div className={classes.descriptionBox}>\r\n              <div className={classes.descriptionText}>\r\n                {colorPalettes[dialogSelect].description}\r\n              </div>\r\n              <div className={classes.descriptionDisplay}>\r\n                {Object.values(colorPalettes[dialogSelect].contents()).map((color: DescribedColor) => (\r\n                  <div key={color.value} className={classes.descriptionDisplayCell} style={{ background: color.value }} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n          <DialogContentText>\r\n            更换配色方案后，所有现有配色设置将重置。\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleConfirmDialog} color=\"primary\" variant=\"contained\" disabled={dialogSelect == value}>\r\n            确认更换\r\n          </Button>\r\n          <Button onClick={handleCloseDialog} color=\"secondary\">\r\n            不了\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useRef, useContext } from 'react';\r\nimport Color from 'color';\r\nimport memoize from 'fast-memoize';\r\n\r\nimport fromPairs from 'lodash/fromPairs';\r\nimport mapValues from 'lodash/mapValues';\r\nimport reverse from 'lodash/reverse';\r\nimport uniq from 'lodash/uniq';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { regularizeQuotes } from './postprocesses';\r\n\r\nimport {\r\n  useStepperStyles,\r\n  MiddleStepProps,\r\n  configContext,\r\n  Configuration,\r\n  PlayerConfig,\r\n  GeneralConfig,\r\n  ColorPalette,\r\n  colorPalettes,\r\n} from 'common';\r\nimport {\r\n  AnalysedLine,\r\n  AnalysedPlayer,\r\n  StepSourceResult,\r\n} from 'step-source';\r\nimport { DescribedColor } from 'common/colors';\r\nimport { PaletteSwitch } from './PaletteSwitch';\r\nimport { renderContent, RendererId, RenderingScheme, renderingSchemes } from 'common/renderers';\r\nimport { defaultGeneralConfig } from 'common/configs';\r\n\r\nexport interface StepConfigResult {\r\n  lines: AnalysedLine[];\r\n}\r\n\r\ninterface PlayerConfigProps {\r\n  name: string;\r\n  color: string;\r\n  enabled: boolean;\r\n  palette: Record<string, DescribedColor>;\r\n  setName: (value: string) => void;\r\n  setColor: (value: string) => void;\r\n  setEnabled: (value: boolean) => void;\r\n}\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    PlayerConfig: {\r\n    },\r\n    Center: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n  }),\r\n);\r\n\r\nconst PlayerConfigDashboard: React.FC<PlayerConfigProps> = (props: PlayerConfigProps) => {\r\n  const { enabled, setEnabled, setName, color, setColor, palette } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={6}>\r\n      <Grid container>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            defaultValue={props.name}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onBlur={(event: React.FocusEvent<HTMLInputElement>): void => {\r\n              setName(event.target.value || '');\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.Center}>\r\n          <Grid container>\r\n            <FormGroup row className={classes.Center}>\r\n              <FormControl>\r\n                <Switch\r\n                  checked={enabled}\r\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>, checked: boolean): void => {\r\n                    setEnabled(checked);\r\n                  }}\r\n                  value=\"primary\"\r\n                />\r\n              </FormControl>\r\n              <FormControl style={enabled ? {} : { visibility: 'hidden' }}>\r\n                <Select\r\n                  style={{\r\n                    backgroundColor: color,\r\n                    color: Color(color).isLight() ? 'black' : 'white',\r\n                    padding: '4px 0px',\r\n                    textAlign: 'center',\r\n                  }}\r\n                  native\r\n                  value={color}\r\n                  onChange={(event: React.ChangeEvent<{ name?: string; value: unknown }>): void => {\r\n                    setColor(event.target.value as string);\r\n                  }}\r\n                >\r\n                  {Object.values(palette).map((paletteColor: DescribedColor): React.ReactNode => {\r\n                    const { value, name, isLight } = paletteColor;\r\n                    return (\r\n                      <option\r\n                        key={value}\r\n                        value={value}\r\n                        style={{\r\n                          backgroundColor: value,\r\n                          color: isLight ? 'black' : 'white',\r\n                          textAlign: 'center',\r\n                        }}\r\n                      >\r\n                        {name || value}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </FormGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\ninterface StepConfigPlayersProps {\r\n  players: Record<string, ConfigPlayer>;\r\n  setPlayer: (id: string, value: ConfigPlayer) => void;\r\n  palette: Record<string, DescribedColor>;\r\n}\r\n\r\nconst StepConfigPlayers: React.FC<StepConfigPlayersProps> = (props: StepConfigPlayersProps) => {\r\n  const { players, setPlayer, palette } = props;\r\n  return (\r\n    <Grid container style={{ overflowY: 'auto' }}>\r\n      {Object.values(players).map((player: ConfigPlayer) => {\r\n        return (\r\n          <PlayerConfigDashboard\r\n            key={player.id}\r\n            name={player.name}\r\n            setName={(value: string): void => {\r\n              setPlayer(player.id, {\r\n                ...player,\r\n                name: value,\r\n              });\r\n            }}\r\n            enabled={player.enabled}\r\n            setEnabled={(value: boolean): void => {\r\n              setPlayer(player.id, {\r\n                ...player,\r\n                enabled: value,\r\n              });\r\n            }}\r\n            color={player.color}\r\n            setColor={(value: string): void => {\r\n              setPlayer(player.id, {\r\n                ...player,\r\n                color: value,\r\n              });\r\n            }}\r\n            palette={palette}\r\n          />\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\nconst useConfigStyles = makeStyles((/*theme: Theme*/) =>\r\n  createStyles({\r\n    PaletteSwitch: {\r\n      marginBottom: 10,\r\n      marginTop: 20,\r\n    },\r\n    RendererSelect: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      marginTop: 20,\r\n    },\r\n    RendererDescription: {\r\n      fontSize: '90%',\r\n      color: 'gray',\r\n    },\r\n    RendererPreview: {\r\n      padding: '0px 13px',\r\n      border: '1px solid #000000de',\r\n      borderRadius: 4,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface StepConfigGeneralProps {\r\n  value: GeneralConfig;\r\n  setValue: (value: GeneralConfig) => void;\r\n  setPalette: (value: ColorPalette) => void;\r\n  className?: string;\r\n}\r\n\r\nconst StepConfigGeneral: React.FC<StepConfigGeneralProps> = (props: StepConfigGeneralProps) => {\r\n  const { value, setValue, setPalette, className } = props;\r\n  const classes = useConfigStyles();\r\n\r\n  return (\r\n    <FormGroup className={className}>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={value.removeLinesStartedWithParenthesis}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>): void => {\r\n              setValue({\r\n                ...value,\r\n                removeLinesStartedWithParenthesis: event.target.checked,\r\n              });\r\n            }}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"去掉以(（开头的行\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={value.removeLinesStartedWithDot}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>): void => {\r\n              setValue({\r\n                ...value,\r\n                removeLinesStartedWithDot: event.target.checked,\r\n              });\r\n            }}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"去掉以.。开头的行\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={value.removeLinesStartedWithLenticular}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>): void => {\r\n              setValue({\r\n                ...value,\r\n                removeLinesStartedWithLenticular: event.target.checked,\r\n              });\r\n            }}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"去掉以【开头的行\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={value.regularizeQuotes}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>): void => {\r\n              setValue({\r\n                ...value,\r\n                regularizeQuotes: event.target.checked,\r\n              });\r\n            }}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"自动纠正前后引号\"\r\n      />\r\n      <PaletteSwitch\r\n        value={value.palette}\r\n        setValue={setPalette}\r\n        className={classes.PaletteSwitch}\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\ninterface StepConfigRendererProps {\r\n  lines: AnalysedLine[];\r\n  players: Record<string, ConfigPlayer>;\r\n  schemeId: RendererId;\r\n  paletteId: ColorPalette;\r\n  setScheme: (value: RendererId) => void;\r\n  className?: string;\r\n}\r\n\r\nfunction getFirstLines(lines: AnalysedLine[]): AnalysedLine[] {\r\n  const visited: Record<string, boolean> = {};\r\n  const result: AnalysedLine[] = [];\r\n  lines.forEach((line: AnalysedLine) => {\r\n    if (!visited[line.playerId]) {\r\n      result.push(line);\r\n      visited[line.playerId] = true;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nconst StepConfigRenderer: React.FC<StepConfigRendererProps> = (props: StepConfigRendererProps) => {\r\n  const { players, schemeId, setScheme, className } = props;\r\n  const memoizedGetFirstLines = useRef(memoize(getFirstLines)).current;\r\n  const classes = useConfigStyles();\r\n\r\n  const options = Object.values(renderingSchemes).filter((scheme: RenderingScheme) =>\r\n    props.paletteId == 'v2' ? scheme.allowNewPalette : true);\r\n\r\n  const firstLines = memoizedGetFirstLines(props.lines)\r\n    .filter((line: AnalysedLine) => players[line.playerId].enabled)\r\n    .map((line: AnalysedLine) => ({\r\n      content: line.content,\r\n      playerName: players[line.playerId]?.name ?? '错误',\r\n      playerColor: players[line.playerId]?.color ?? 'black',\r\n    }));\r\n  const scheme: RenderingScheme = renderingSchemes[schemeId];\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className={classes.RendererSelect}>\r\n        排版格式：\r\n        <FormControl variant=\"outlined\">\r\n          <Select\r\n            value={schemeId}\r\n            onChange={(change: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n              const newValue = change.target.value as string;\r\n              if (newValue in renderingSchemes) {\r\n                setScheme(newValue as RendererId);\r\n              }\r\n            }}\r\n          >\r\n            {options.map((scheme: RenderingScheme) => (\r\n              <MenuItem key={scheme.id} value={scheme.id}>{scheme.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className={classes.RendererDescription}>\r\n        {scheme.description}\r\n      </div>\r\n      <div className={classes.RendererPreview}>\r\n        {renderContent(firstLines, scheme, true)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype StepConfigProps = MiddleStepProps<StepSourceResult, StepConfigResult, Configuration>;\r\n\r\ninterface ConfigPlayer {\r\n  id: string;\r\n  name: string;\r\n  nameCandidates: string[];\r\n  color: string;\r\n  enabled: boolean;\r\n}\r\n\r\nfunction initializePlayers(\r\n  analysePlayers: AnalysedPlayer[],\r\n  playerConfigs: Record<string, PlayerConfig>,\r\n  colors: Record<string, DescribedColor>,\r\n): Record<string, ConfigPlayer> {\r\n  const availableColors = { ...colors };\r\n  const result = analysePlayers.map((source: AnalysedPlayer) => {\r\n    const existingConfig = playerConfigs[source.playerId];\r\n    const sourceNames = reverse(Array.from(source.names));\r\n    const playerResult: ConfigPlayer = existingConfig != null ? {\r\n      id: source.playerId,\r\n      name: existingConfig.displayName,\r\n      nameCandidates: uniq([existingConfig.displayName, ...sourceNames]),\r\n      color: existingConfig.color,\r\n      enabled: existingConfig.enabled,\r\n    } : {\r\n      id: source.playerId,\r\n      name: sourceNames[0],\r\n      nameCandidates: sourceNames,\r\n      color: '',\r\n      enabled: true,\r\n    };\r\n    if (!(playerResult.color in colors)) {\r\n      const color = Object.keys(availableColors)[0];\r\n      playerResult.color = color;\r\n    }\r\n    delete availableColors[playerResult.color];\r\n    return playerResult;\r\n  });\r\n  return fromPairs(result.map((player: ConfigPlayer) => [player.id, player]));\r\n}\r\n\r\nfunction postProcess(lines: AnalysedLine[], generalConfig: GeneralConfig): AnalysedLine[] {\r\n  let resultLines: AnalysedLine[] = lines;\r\n  if (generalConfig.removeLinesStartedWithParenthesis) {\r\n    resultLines = resultLines.filter((line: AnalysedLine) => {\r\n      return !['（', '('].includes(line.content[0][0]);\r\n    });\r\n  }\r\n  if (generalConfig.removeLinesStartedWithDot) {\r\n    resultLines = resultLines.filter((line: AnalysedLine) => {\r\n      return !['。', '.'].includes(line.content[0][0]);\r\n    });\r\n  }\r\n  if (generalConfig.removeLinesStartedWithLenticular) {\r\n    resultLines = resultLines.filter((line: AnalysedLine) => {\r\n      return !['【'].includes(line.content[0][0]);\r\n    });\r\n  }\r\n  if (generalConfig.regularizeQuotes) {\r\n    resultLines = resultLines.map((line: AnalysedLine) => ({\r\n      ...line,\r\n      content: regularizeQuotes(line.content),\r\n    }));\r\n  }\r\n  return resultLines;\r\n}\r\n\r\nexport const StepConfig: React.FC<StepConfigProps> = (props: StepConfigProps) => {\r\n  const { args, onPrevStep, onNextStep } = props;\r\n\r\n  const config = useContext<Configuration>(configContext);\r\n  const stepperClasses = useStepperStyles();\r\n  const [generalConfig, setGeneralConfig] = useState<GeneralConfig>(\r\n    () => config.general || {},\r\n  );\r\n  const palette = colorPalettes[generalConfig.palette];\r\n  const [players, setPlayers] = useState<Record<string, ConfigPlayer>>(\r\n    initializePlayers(args.players, config.players, palette.contents()),\r\n  );\r\n\r\n  function setPlayer(id: string, value: ConfigPlayer): void {\r\n    setPlayers({ ...players, [id]: value });\r\n  }\r\n\r\n  function handleSetPalette(value: ColorPalette): void {\r\n    const schemePaletteConflict = value == 'v2' &&\r\n      !renderingSchemes[generalConfig.rendererScheme].allowNewPalette;\r\n    const newSchemeId = schemePaletteConflict ?\r\n      defaultGeneralConfig.rendererScheme :\r\n      generalConfig.rendererScheme;\r\n\r\n    setGeneralConfig({\r\n      ...generalConfig,\r\n      palette: value,\r\n      rendererScheme: newSchemeId,\r\n    });\r\n    const palette = colorPalettes[value];\r\n    setPlayers(initializePlayers(args.players, config.players, palette.contents()));\r\n  }\r\n\r\n  function handleSetRenderer(value: RendererId): void {\r\n    setGeneralConfig({ ...generalConfig, rendererScheme: value });\r\n  }\r\n\r\n  if (!props.show)\r\n    return null;\r\n\r\n  return (\r\n    <Grid container className={stepperClasses.Container}>\r\n      <Grid item xs={12} className={stepperClasses.Body}>\r\n        <StepConfigGeneral\r\n          value={generalConfig}\r\n          setValue={setGeneralConfig}\r\n          setPalette={handleSetPalette}\r\n        />\r\n        <StepConfigPlayers\r\n          players={players}\r\n          setPlayer={setPlayer}\r\n          palette={palette.contents()}\r\n        />\r\n        <StepConfigRenderer\r\n          lines={args.lines}\r\n          players={players}\r\n          setScheme={handleSetRenderer}\r\n          schemeId={generalConfig.rendererScheme}\r\n          paletteId={generalConfig.palette}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} justifyContent=\"flex-end\" className={stepperClasses.Control}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={stepperClasses.ControlButton}\r\n          onClick={onPrevStep}\r\n        >\r\n          上一步\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={stepperClasses.ControlButton}\r\n          onClick={(): void => {\r\n            onNextStep(\r\n              {\r\n                lines: postProcess(args.lines, generalConfig),\r\n              },\r\n              {\r\n                players: mapValues(players, (player: ConfigPlayer): PlayerConfig => ({\r\n                  displayName: player.name,\r\n                  color: player.color,\r\n                  enabled: player.enabled,\r\n                })),\r\n                general: generalConfig,\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          下一步\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport SVGInline from 'react-svg-inline';\r\nimport preval from 'preval.macro';\r\n\r\nimport GithubIcon from 'simple-icons/icons/github';\r\n\r\nimport { makeStyles, createStyles, createTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport './index.css';\r\nimport './App.css';\r\nimport { StepSource, StepSourceResult } from 'step-source';\r\nimport { StepConfig, StepConfigResult } from 'step-config';\r\nimport { StepRender } from 'step-render';\r\nimport {\r\n  MultiStep,\r\n  ConfigStorage,\r\n  configContext,\r\n  Configuration,\r\n  realConfigStorage,\r\n} from 'common';\r\nimport { sanitizeConfig } from 'common/configs';\r\n\r\nconst useHeaderStyles = makeStyles(() =>\r\n  createStyles({\r\n    logo: {\r\n      marginRight: 15,\r\n      backgroundColor: 'white',\r\n    },\r\n    horizontalFill: {\r\n      flex: '1 0 auto',\r\n    },\r\n    toolbarIcon: {\r\n      height: 24,\r\n      width: 24,\r\n      fill: 'white',\r\n    },\r\n  }),\r\n);\r\n\r\ninterface HeaderProps {\r\n  repoUrl: string;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ repoUrl }: HeaderProps) => {\r\n  const classes = useHeaderStyles();\r\n  return (\r\n    <AppBar position='fixed'>\r\n      <Toolbar>\r\n        <Avatar alt=\"Logo\" src=\"/android-chrome-512x512.png\" className={classes.logo} />\r\n        <Typography variant=\"h6\" className={classes.horizontalFill}>\r\n          DK的跑团记录着色器\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"GitHub\"\r\n          href={repoUrl}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <SVGInline\r\n            svg={GithubIcon.svg}\r\n            className={classes.toolbarIcon}\r\n          />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\ninterface MainProps {\r\n  configStorage: ConfigStorage;\r\n}\r\n\r\nconst Main: React.FC<MainProps> = (props: MainProps) => {\r\n  const { configStorage } = props;\r\n  const [config, setConfig] = useState<Configuration>((): Configuration => {\r\n    return sanitizeConfig(configStorage.load());\r\n  });\r\n  const ConfigProvider = configContext.Provider;\r\n  const saveConfig = (value: Configuration): void => {\r\n    setConfig(value);\r\n    configStorage.save(value);\r\n  };\r\n  return (\r\n    <ConfigProvider value={config}>\r\n      <MultiStep<StepSourceResult, StepConfigResult, Configuration>\r\n        step1={StepSource}\r\n        step2={StepConfig}\r\n        step3={StepRender}\r\n        initConfig={(): Configuration => config}\r\n        saveConfig={saveConfig}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n};\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#795548',\r\n    },\r\n    secondary: {\r\n      main: '#00897b',\r\n    },\r\n  },\r\n});\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"root\">\r\n        <Header\r\n          repoUrl='https://github.com/dkwingsmt/log-painter'\r\n        />\r\n        <Container maxWidth='md' className='Body-container'>\r\n          <Main\r\n            configStorage={realConfigStorage}\r\n          />\r\n        </Container>\r\n        <p\r\n          style={{\r\n            textAlign: 'center',\r\n            marginTop: 100,\r\n            color: '#dddddd',\r\n            fontSize: 'small',\r\n          }}\r\n        >\r\n            最后更新时间：{preval`module.exports = new Date().toLocaleDateString(\"zh-cn\", {dateStyle: \"full\"})`}\r\n        </p>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) : void {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() : void {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'web';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import React from 'react';\r\nimport Store from 'store';\r\n\r\nimport { ColorPalette, colorPalettes } from './colors';\r\nimport { RendererId, renderingSchemes } from './renderers';\r\n\r\nexport interface GeneralConfig {\r\n  removeLinesStartedWithParenthesis: boolean;\r\n  removeLinesStartedWithDot: boolean;\r\n  removeLinesStartedWithLenticular: boolean;\r\n  regularizeQuotes: boolean;\r\n  palette: ColorPalette;\r\n  rendererScheme: RendererId;\r\n}\r\n\r\nexport const defaultGeneralConfig: GeneralConfig = {\r\n  removeLinesStartedWithParenthesis: false,\r\n  removeLinesStartedWithDot: false,\r\n  removeLinesStartedWithLenticular: false,\r\n  regularizeQuotes: false,\r\n  palette: 'v2',\r\n  rendererScheme: 'standard-rich',\r\n};\r\n\r\nexport interface PlayerConfig {\r\n  displayName: string;\r\n  enabled: boolean;\r\n  color: string;\r\n}\r\n\r\nexport interface Configuration {\r\n  players: Record<string, PlayerConfig>;\r\n  general: GeneralConfig;\r\n  [x: string]: unknown;\r\n}\r\n\r\nexport const sanitizeConfig = (value: Record<string, unknown> | undefined): Configuration => {\r\n  const nonNullValue = (value ?? {}) as Record<string, Record<string, unknown>>;\r\n  const result = {\r\n    players: (nonNullValue['players'] ?? {}) as Record<string, PlayerConfig>,\r\n    general: {\r\n      ...defaultGeneralConfig,\r\n      ...nonNullValue['general'] as unknown as GeneralConfig,\r\n    },\r\n  };\r\n  if (!(result.general.palette in colorPalettes)) {\r\n    result.general.palette = value == null ? 'v2' : 'bbs';\r\n  }\r\n  if (!(result.general.rendererScheme in renderingSchemes)) {\r\n    result.general.rendererScheme = 'standard-rich';\r\n  }\r\n  if (!renderingSchemes[result.general.rendererScheme].allowNewPalette\r\n      && result.general.palette == 'v2') {\r\n    result.general.rendererScheme = 'standard-rich';\r\n  }\r\n  return result;\r\n};\r\n\r\nconst emptyConfig = sanitizeConfig(undefined);\r\n\r\nexport interface ConfigStorage {\r\n  load: () => Record<string, unknown> | undefined;\r\n  save: (value: Record<string, unknown>) => void;\r\n}\r\n\r\nexport const realConfigStorage: ConfigStorage = {\r\n  load: () => {\r\n    return Store.get('config');\r\n  },\r\n  save: (config: Record<string, unknown>): void => {\r\n    Store.set('config', config);\r\n  },\r\n};\r\n\r\nexport const configContext: React.Context<Configuration> = React.createContext<Configuration>(emptyConfig);\r\n","import Color from 'color';\r\n\r\nimport fromPairs from 'lodash/fromPairs';\r\nimport once from 'lodash/once';\r\n\r\nexport interface DescribedColor {\r\n  value: string;\r\n  name?: string;\r\n  isLight: boolean;\r\n}\r\n\r\ninterface RawColor {\r\n  value: string;\r\n  name: string;\r\n}\r\n\r\nfunction initializeColors(rawData: RawColor[]): Record<string, DescribedColor> {\r\n  return fromPairs(rawData.map(\r\n    ({ value, ...others }) => [value, {\r\n      ...others,\r\n      value,\r\n      isLight: Color(value).isLight(),\r\n    }],\r\n  ));\r\n}\r\n\r\nconst rawBbsColors = [\r\n  { value: \"black\", name: \"黑色\" },\r\n  { value: \"silver\", name: \"灰色\" },\r\n  { value: \"red\", name: \"红色\" },\r\n  { value: \"green\", name: \"绿色\" },\r\n  { value: \"orange\", name: \"橘色\" },\r\n  { value: \"purple\", name: \"紫色\" },\r\n  { value: \"teal\", name: \"蓝绿\" },\r\n  { value: \"fuchsia\", name: \"桃红\" },\r\n  { value: \"yellow\", name: \"黄色\" },\r\n  { value: \"beige\", name: \"米色\" },\r\n  { value: \"brown\", name: \"棕色\" },\r\n  { value: \"navy\", name: \"深蓝\" },\r\n  { value: \"maroon\", name: \"紫红\" },\r\n  { value: \"limegreen\", name: \"莱姆\" },\r\n  { value: \"white\", name: \"白色\" },\r\n  { value: \"brown\", name: \"棕色\" },\r\n  { value: \"blue\", name: \"蓝色\" },\r\n  { value: \"pink\", name: \"粉红\" },\r\n];\r\n\r\nconst rawV2Colors = [\r\n  { value: \"black\", name: \"黑色\" },\r\n  { value: \"silver\", name: \"银灰\" },\r\n  { value: \"#634200\", name: \"深褐\" },\r\n  { value: \"#e39700\", name: \"暗橙\" },\r\n  { value: \"#d4e300\", name: \"金色\" },\r\n  { value: \"#1ee300\", name: \"草绿\" },\r\n  { value: \"#26067d\", name: \"靛色\" },\r\n  { value: \"#c20cf0\", name: \"蓝紫\" },\r\n  { value: \"#fc6d0d\", name: \"阳橙\" },\r\n  { value: \"#0dfccc\", name: \"蓝绿\" },\r\n  { value: \"#095157\", name: \"暗岩灰\" },\r\n  { value: \"#8a0e1e\", name: \"暗红\" },\r\n  { value: \"#e31717\", name: \"鲜红\" },\r\n  { value: \"#1717e3\", name: \"蓝色\" },\r\n  { value: \"#fc1956\", name: \"樱桃红\" },\r\n  { value: \"#bd1c72\", name: \"品红\" },\r\n  { value: \"#b06635\", name: \"锗黄\" },\r\n  { value: \"#315723\", name: \"暗绿\" },\r\n  { value: \"#bda855\", name: \"暗卡其\" },\r\n  { value: \"#9a55bd\", name: \"中蓝紫\" },\r\n  { value: \"#5ebd5e\", name: \"叶绿\" },\r\n  { value: \"#65a8c9\", name: \"灰蓝\" },\r\n  { value: \"#6b88d6\", name: \"矢车菊蓝\" },\r\n  { value: \"#68bdac\", name: \"中碧蓝\" },\r\n  { value: \"#575034\", name: \"咖啡\" },\r\n  { value: \"#d68c81\", name: \"玫瑰褐\" },\r\n  { value: \"#3d4057\", name: \"普鲁士蓝\" },\r\n  { value: \"#bd84a2\", name: \"火鹤红\" },\r\n  { value: \"#574141\", name: \"暗灰\" },\r\n  { value: \"#ebf0d8\", name: \"米黄\" },\r\n  { value: \"#eae3fc\", name: \"薰衣草紫\" },\r\n];\r\n\r\nexport type ColorPalette = 'bbs' | 'v2';\r\n\r\nexport interface PaletteInfo {\r\n  id: ColorPalette;\r\n  name: string;\r\n  description: string;\r\n  contents: () => Record<string, DescribedColor>,\r\n}\r\n\r\nexport const colorPalettes: Record<ColorPalette, PaletteInfo> = {\r\n  'v2': {\r\n    id: 'v2',\r\n    name: '色板v2（推荐）',\r\n    description: '“色板v2”包括31个精心挑选的颜色，增强了色彩间的对比度以及与白色背景的对比度，缺点是无法输出至BBS代码。',\r\n    contents: once(() => initializeColors(rawV2Colors)),\r\n  },\r\n  'bbs': {\r\n    id: 'bbs',\r\n    name: 'BBS颜色',\r\n    description: '“BBS色板”包含18个常见于BBS的颜色，是传统的配色方案，缺点是色彩间的区分度及与背景的对比度无法保证。',\r\n    contents: once(() => initializeColors(rawBbsColors)),\r\n  },\r\n};\r\n"],"sourceRoot":""}